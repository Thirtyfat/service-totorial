<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mglj.shards.service.dao.api.DatasourceGroupDao">

	<resultMap id="DatasourceGroupResultMap" type="com.mglj.shards.service.domain.po.DatasourceGroupPO">
		<result property="datasourceGroupId" column="datasource_group_id"/>
		<result property="name" column="name"/>
		<result property="status" column="status"/>
		<result property="updateTime" column="update_time"/>
		<result property="remark" column="remark"/>
	</resultMap>

	<sql id="columns">
		datasource_group_id,`name`,status,update_time,remark
	</sql>

	<insert id="saveDatasourceGroup">
        INSERT INTO datasource_group (
        	datasource_group_id ,
        	`name` ,
        	status ,
        	update_time ,
        	remark
        ) VALUES (
        	#{datasourceGroupId} ,
        	#{name} ,
        	#{status} ,
        	#{updateTime} ,
        	#{remark}
        )
	</insert>

	<update id="updateDatasourceGroup" >
        UPDATE datasource_group SET
	        update_time = #{updateTime} ,
	        remark = #{remark}
        WHERE 
	        datasource_group_id = #{datasourceGroupId} 
	</update>

	<update id="updateDatasourceGroupStatus" >
		UPDATE datasource_group SET
			status = #{param2}
		WHERE
			datasource_group_id = #{param1}
	</update>

	<delete id="deleteDatasourceGroup">
        DELETE FROM datasource_group
        WHERE
        	datasource_group_id = #{id}
    </delete>

	<select id="isNameExisted" resultType="boolean">
		SELECT
			count(*) > 0
		FROM datasource_group
		WHERE
			`name` = #{param1}
			<if test="param2 != null">
				AND datasource_group_id != #{param2}
			</if>
	</select>
    
    <select id="getDatasourceGroup" resultMap="DatasourceGroupResultMap">
		SELECT <include refid="columns" />
		    FROM datasource_group 
	        WHERE 
		        datasource_group_id = #{id} 
	</select>
	
	<select id="listDatasourceGroupByIds" resultMap="DatasourceGroupResultMap">
    	SELECT <include refid="columns" />
	    FROM datasource_group 
		WHERE 
			datasource_group_id IN
			<foreach collection="collection" item="item" open="(" close=")" separator=",">#{item}</foreach>
    </select>

	<sql id="findWhere">
		<where>
			<if test="status !=null">
				AND `status` = #{status}
			</if>
			<if test="name !=null and name != ''">
				AND `name` LIKE CONCAT('${name}', '%')
			</if>
		</where>
	</sql>

	<select id="listDatasourceGroup" resultMap="DatasourceGroupResultMap">
		SELECT
		<include refid="columns"/>
		FROM datasource_group
		INNER JOIN (
		SELECT datasource_group_id
		FROM datasource_group
		<include refid="findWhere"/>
		ORDER BY datasource_group_id
		LIMIT #{offset}, #{rows}
		) AS t
		USING ( datasource_group_id )
	</select>

	<select id="countDatasourceGroup" resultType="int">
		SELECT count(*)
		FROM datasource_group
		<include refid="findWhere"/>
	</select>

	<select id="headDatasourceGroup" resultType="com.mglj.shards.service.api.dto.DatasourceGroupHeadDTO">
		SELECT
			datasource_group_id AS datasourceGroupId,
			`name`,
			status,
			remark
		FROM datasource_group
		<include refid="findWhere"/>
	</select>
	
</mapper>

